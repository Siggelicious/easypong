from easytypes import Vec2, Box
from sdl2 import *

MARGIN = 5.0
PLAYER_SIZE = Vec2(10.0, 50.0)
BALL_SIZE = Vec2(1.0, 1.0)
PLAYER_SPEED = 100.0
BALL_SPEED = 300.0
MAPS = [
    {
        1 : SDL_SCANCODE_W,
        -1 : SDL_SCANCODE_S
    },
    {
        1 : SDL_SCANCODE_I,
        -1 : SDL_SCANCODE_K
    }
]
class Arena:
    def __init__(self, size, graphics):
        self.size = size
        self.graphics = graphics
        self.players = []
        self.ball = Box()
        self.score = [ 0, 0 ]

    def handle_player_input(self):
        kb_state = SDL_GetKeyboardState(None)
        
        for i in range(2):
            move = 0
            player = self.players[i]

            for k, v in MAPS[i].items():
                if kb_state[v]:
                    move += k;      

            player.vel.y = move * player.speed 

    def prepare(self, angle):
        player1 = self.players[0]
        player2 = self.players[1]
        player1.pos.x = MARGIN
        player1.pos.y = self.size.y / 2.0
        player2.pos.x = self.size.x - MARGIN - PLAYER_SIZE.x  
        player2.pos.y = self.size.y / 2.0
        
        if 

    def play(self):
        quit = False

        while not quit:
            

    def render(self):
        pass

    def start(self):
        self.players = [
            Box(
                PLAYER_SIZE,
                PLAYER_SPEED,
            ),
            Box(
                PLAYER_SIZE,
                PLAYER_SPEED,
            )
        ]
        self.ball = Box(
            BALL_SIZE,
            BALL_SPEED,
        )

        self.play()
